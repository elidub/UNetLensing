imports: !import
  - numpy as np
  - from pyro import distributions as dist
  - from pyrofit.lensing.utils import get_meshgrid
  - from pyrofit.lensing.model import LensingModelBase
  - from pyrofit.lensing.lenses import ExternalShear, SPLEwithHaloes, KeOpsNFWSubhaloes
  - from pyrofit.lensing.sources import ImageSource, SersicSource

defs:
  res: &res ${res=(0.0125)}
  nx: &nx ${nx=(400)}
  ny: &ny ${ny=(400)}
  XY: !py:get_meshgrid &XY [*res, *nx, *ny]
  z_lens: &z_lens 0.5
  z_src: &z_src 2.
  mask: !tensor &mask [true]
     
model: !Stochastic
  - !py:LensingModelBase
    <: *XY
    alphas:
      ext: !Stochastic:ext
        - !py:ExternalShear []
        - gamma_1: 0.
          gamma_2: 0.
      main: !Stochastic:main
        - !py:SPLEwithHaloes
          z_lens: *z_lens
          z_src: *z_src
#           sub: !Stochastic:sub
#             - !py:KeOpsNFWSubhaloes
#               nsub: 1
#               z_lens: *z_lens
#               z_src: *z_src
#               pos_sampler: !eval dist.Uniform(torch.tensor(-2.5), torch.tensor(2.5)).expand([2]).to_event(1)
#               mass_sampler: !eval dist.Delta(torch.tensor(1e9))
#               c_200c_sampler: 15.
#             - {}
        - phi:   1.
          q:     0.75
          r_ein: 1.5
          slope: 2.1
          x:     -0.05
          y:     0.1
    sources:
      sersic: !Stochastic:sersic
        - !py:SersicSource []
        - x:     0.
          y:     0.
          phi:   1.
          q:     0.5
          index: 1.
          r_e:   1.
          I_e:   1. 
  - sigma_stat: ${sigma_stat=(0.01)}  